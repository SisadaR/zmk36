/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            timeout-ms = <100>;
            bindings = <&kp TAB>;
            key-positions = <1 2>;
        };
    };

    macros {
        zed_em_kay: zed_em_kay {
            compatible = "zmk,behavior-macro";
            label = "ZM_zed_em_kay";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp Z &kp M &kp K>,
                <&macro_release>,
                <&kp LSHFT>;
        };
    };
    
     behaviors {
        mh: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
    &trans   &kp Q       &kp W       &kp E         &kp R         &kp T               &kp Y          &kp U        &kp I       &kp O       &kp P                   &trans
    &trans   &mh LCTRL A &mh LALT S  &mh LGUI D    &mh LSHIFT F  &lt 3 G             &lt 5 H        &mh RSHIFT J &mh RGUI K  &mh RALT L  &mh RCTRL SEMICOLON     &trans
    &trans   &kp Z       &kp X       &kp C         &kp V         &kp B               &kp N          &kp M        &kp COMMA   &kp DOT     &kp FSLH                &trans
                                    &lt 7 ESC     &mo 1         &lt 4 SPACE         &lt 4 RET      &lt APOS     &tog 6
            >;
        };

        raise {
            bindings = <
    &trans         &kp N1  &kp N2        &kp N3          &kp N4          &kp N5             &kp N6             &kp N7          &kp N8     &kp N9           &kp N0              &trans
    &trans       &kp LBKT  &trans      &kp PLUS    &kp KP_MINUS        &kp LPAR             &kp RPAR           &kp MINUS       &kp EQUAL  &kp LEFT_BRACKET &kp RIGHT_BRACKET   &trans
    &trans  &kp LESS_THAN  &trans  &kp KP_EQUAL  &kp UNDERSCORE  &kp LEFT_BRACE             &kp RIGHT_BRACE    &trans          &trans     &kp BACKSLASH    &kp GREATER_THAN    &trans
                                         &trans          &trans          &trans             &kp TAB            &kp RG(SPACE)   &trans
            >;
        };

        lower {
            bindings = <
    &trans   &kp EXCL    &kp AT      &kp HASH    &kp DLLR        &kp PRCNT               &kp CARET   &kp AMPS    &kp KP_MULTIPLY &kp LPAR        &kp RPAR         &trans
    &trans   &kp GRAVE   &kp TILDE   &kp F1      &kp F2          &kp F3                  &kp F4      &kp F5      &kp F6          &kp LEFT_BRACE  &kp RIGHT_BRACE  &trans
    &trans   &trans      &trans      &kp F7      &kp F8          &kp F9                  &kp F10     &kp F11     &kp F12         &kp PIPE        &trans           &trans
                                    &trans      &kp LG(SPACE)   &kp TAB                 &trans      &trans      &trans
            >;
        };

        numpad {
            bindings = <
 &trans  &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &trans         &kp KP_PLUS         &kp KP_N7        &kp KP_N8  &kp KP_N9  &trans  &trans
 &trans  &trans        &trans        &trans        &trans        &trans         &kp KP_MINUS        &kp KP_N4        &kp KP_N5  &kp KP_N6  &trans  &trans
 &trans  &bt BT_CLR    &trans        &trans        &trans        &trans         &kp KP_MULTIPLY     &kp KP_N1        &kp KP_N2  &kp KP_N3  &trans  &trans
                                    &trans        &trans        &kp EQUAL      &kp KP_SLASH        &kp KP_NUMBER_0  &kp KP_DOT
            >;
        };

        Direction {
            bindings = <
&trans       &kp INSERT  &kp HOME        &kp PAGE_DOWN   &kp PAGE_UP     &kp END             &kp HOME        &kp PAGE_DOWN   &kp PAGE_UP     &kp END         &kp INSERT  &trans
&trans       &kp LSHIFT  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW    &kp RIGHT_ARROW     &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW   &kp RIGHT_ARROW  &kp RSHIFT  &trans
&trans       &trans      &trans          &trans          &trans          &kp DEL             &kp BACKSPACE   &trans          &trans          &trans          &trans      &trans
                                        &trans          &trans          &kp SPACE           &kp ENTER       &trans          &trans
            >;
        };
        
        number {
            bindings = <
     &trans        &trans        &trans        &trans        &trans     &trans         &kp KP_PLUS         &kp N7   &kp N8  &kp N9  &trans  &trans
     &trans        &trans        &trans        &trans        &trans     &trans         &kp KP_MINUS        &kp N4   &kp N5  &kp N6  &trans  &trans
     &trans        &trans        &trans        &trans        &trans     &trans         &kp KP_MULTIPLY     &kp N1   &kp N2  &kp N3  &trans  &trans
                                               &trans        &trans     &kp EQUAL      &kp KP_SLASH        &kp N0   &kp KP_DOT
            >;
        };
        
        FixedDirection {
            bindings = <
 &trans     &trans      &trans          &trans          &trans          &trans              &kp HOME        &kp PAGE_DOWN   &kp PAGE_UP     &kp END         &kp INSERT  &kp DELETE
 &trans     &kp LCTRL   &kp LALT        &kp LGUI        &kp LSHIFT      &trans              &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW   &kp RIGHT_ARROW  &kp RSHIFT  &trans
 &trans     &trans      &trans          &trans          &trans          &kp DEL             &kp BACKSPACE   &trans          &trans          &trans          &trans      &trans
                                        &trans          &trans          &kp SPACE           &kp ENTER       &trans          &trans
                                        >;
        };
        
        StickyKey {
            bindings = <
 &trans     &trans      &trans          &trans          &trans          &trans              &trans          &trans          &trans          &trans          &trans &kp DELETE
 &trans     &sk LCTRL   &sk LALT        &sk LGUI        &sk LSHIFT      &sk RIGHT_ARROW     &trans          &trans          &trans          &trans          &trans  &trans
 &trans     &trans      &trans          &trans          &trans          &trans              &trans          &trans          &trans          &trans          &trans      &trans
                                        &trans          &trans          &trans              &trans          &trans          &trans
                                        >;
        };
    };
};
